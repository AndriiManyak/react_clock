{"version":3,"sources":["components/Clock/Clock.js","components/shapes/ClockShape.js","components/Button/Button.js","components/shapes/ButtonShape.js","components/ButtonSetName/ButtonSetName.js","components/shapes/ButtonSetNameShape.js","App.js","index.js"],"names":["Clock","PropTypes","shape","isVisible","bool","isRequired","state","time","Date","setInterval","date","console","log","toLocaleTimeString","setState","this","props","React","Component","Button","click","func","type","onClick","ButtonSetName","App","changeVisibility","isClockVisible","changeName","newName","Math","floor","random","name","className","ReactDOM","render","document","getElementById"],"mappings":"uNAGaA,GCDaC,IAAUC,MAAM,CACxCC,UAAWF,IAAUG,KAAKC,aACzBA,WDDH,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,kEAKuB,IAAD,OAClBC,aAAY,WACV,IAAMC,EAAO,IAAIF,KAGjBG,QAAQC,IAAIF,EAAKG,sBACjB,EAAKC,SAAS,CAAEP,KAAMG,MACrB,OAZP,+BAkBI,OAFsBK,KAAKC,MAAnBb,UAIJ,8BACGY,KAAKT,MAAMC,KAAKM,sBAKhB,2CA1BX,GAA2BI,IAAMC,YEApBC,GCDclB,IAAUC,MAAM,CACzCkB,MAAOnB,IAAUoB,KAAKhB,aACrBA,WDDmB,SAAC,GAAD,IAAGe,EAAH,EAAGA,MAAH,OAEpB,4BAAQE,KAAK,SAASC,QAASH,GAA/B,kBEFWI,GCDqBvB,IAAUC,MAAM,CAChDkB,MAAOnB,IAAUoB,KAAKhB,aACrBA,WDD0B,SAAC,GAAD,IAAGe,EAAH,EAAGA,MAAH,OAC3B,4BAAQE,KAAK,SAASC,QAASH,GAA/B,cE2CaK,G,wDAxCb,aAAe,IAAD,8BACZ,gBAOFC,iBAAmB,WACjB,EAAKZ,UAAS,SAAAR,GAAK,MAAK,CAAEqB,gBAAiBrB,EAAMqB,oBATrC,EAYdC,WAAa,WACX,IAAMC,EAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGhCrB,QAAQC,IAAR,qCAA0C,EAAKN,MAAM2B,KAArD,eAAgEJ,IAChE,EAAKf,SAAS,CAAEmB,KAAMJ,KAftB,EAAKvB,MAAQ,CACXqB,gBAAgB,EAChBM,KAAM,GAJI,E,qDAoBJ,IACAN,EAAmBZ,KAAKT,MAAxBqB,eAER,OACE,yBAAKO,UAAU,OACb,2CAEA,2CAEG,IACD,kBAAC,EAAD,CAAO/B,UAAWwB,KAGpB,kBAAC,EAAD,CAAQP,MAAOL,KAAKW,mBACpB,kBAAC,EAAD,CAAeN,MAAOL,KAAKa,kB,GAnCjBX,IAAMC,YCFxBiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.65c2debd.chunk.js","sourcesContent":["import React from 'react';\nimport { ClockShape } from '../shapes/ClockShape';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date(),\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n      this.setState({ time: date });\n    }, 1000);\n  }\n\n  render() {\n    const { isVisible } = this.props;\n\n    if (isVisible) {\n      return (\n        <span>\n          {this.state.time.toLocaleTimeString()}\n        </span>\n      );\n    }\n\n    return <span>Empty</span>;\n  }\n}\n\nClock.propTypes = ClockShape;\n","import PropTypes from 'prop-types';\n\nexport const ClockShape = PropTypes.shape({\n  isVisible: PropTypes.bool.isRequired,\n}).isRequired;\n","import React from 'react';\nimport { ButtonShape } from '../shapes/ButtonShape';\n\nexport const Button = ({ click }) => (\n\n  <button type=\"button\" onClick={click}>\n    Toggle clock\n  </button>\n);\n\nButton.propTypes = ButtonShape;\n","import PropTypes from 'prop-types';\n\nexport const ButtonShape = PropTypes.shape({\n  click: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport { ButtonSetNameShape } from '../shapes/ButtonSetNameShape';\n\nexport const ButtonSetName = ({ click }) => (\n  <button type=\"button\" onClick={click}>\n    Set name\n  </button>\n);\n\nButtonSetName.propTypes = ButtonSetNameShape;\n","import PropTypes from 'prop-types';\n\nexport const ButtonSetNameShape = PropTypes.shape({\n  click: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport { Button } from './components/Button/Button';\nimport { ButtonSetName } from './components/ButtonSetName';\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isClockVisible: true,\n      name: 1,\n    };\n  }\n\n  changeVisibility = () => {\n    this.setState(state => ({ isClockVisible: !state.isClockVisible }));\n  }\n\n  changeName = () => {\n    const newName = Math.floor(Math.random() * 1000);\n\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${this.state.name} to ${newName}`);\n    this.setState({ name: newName });\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <p>\n          Current time:\n          {' '}\n          <Clock isVisible={isClockVisible} />\n        </p>\n\n        <Button click={this.changeVisibility} />\n        <ButtonSetName click={this.changeName} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}