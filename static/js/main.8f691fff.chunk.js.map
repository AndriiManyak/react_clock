{"version":3,"sources":["components/Clock/Clock.js","components/Button/Button.js","components/ButtonSetName/ButtonSetName.js","App.js","index.js"],"names":["Clock","state","time","Date","this","timeInterval","setInterval","date","console","log","toLocaleTimeString","setState","clearInterval","React","Component","Button","handleClick","type","onClick","ButtonSetName","App","changeVisibilityOnClick","prevState","isClockVisible","changeNameOnClick","newName","Math","floor","random","name","className","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,kEAKuB,IAAD,OAClBC,KAAKC,aAAeC,aAAY,WAC9B,IAAMC,EAAO,IAAIJ,KAGjBK,QAAQC,IAAIF,EAAKG,sBACjB,EAAKC,SAAS,CAAET,KAAMK,MACrB,OAZP,6CAgBIK,cAAcR,KAAKC,gBAhBvB,+BAmBY,IACAH,EAASE,KAAKH,MAAdC,KAER,OACE,8BAAOA,EAAKQ,0BAvBlB,GAA2BG,IAAMC,WCCpBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACpB,4BAAQC,KAAK,SAASC,QAASF,GAA/B,iBCDWG,EAAgB,SAAC,GAAD,IAAGH,EAAH,EAAGA,YAAH,OAC3B,4BAAQC,KAAK,SAASC,QAASF,GAA/B,aC+CaI,G,wDA5Cb,aAAe,IAAD,8BACZ,gBAOFC,wBAA0B,WACxB,EAAKV,UAAS,SAAAW,GAAS,MAAK,CAAEC,gBAAiBD,EAAUC,oBAT7C,EAYdC,kBAAoB,WAClB,IAAMC,EAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGhCpB,QAAQC,IAAR,qCAA0C,EAAKR,MAAM4B,KAArD,eAAgEJ,IAChE,EAAKd,SAAS,CAAEkB,KAAMJ,KAftB,EAAKxB,MAAQ,CACXsB,gBAAgB,EAChBM,KAAM,GAJI,E,qDAoBJ,IACAN,EAAmBnB,KAAKH,MAAxBsB,eAER,OACE,yBAAKO,UAAU,OACb,2CAEA,6CAEG,IACAP,EACG,kBAAC,EAAD,MACA,wCAKN,kBAAC,EAAD,CAAQP,YAAaZ,KAAKiB,0BAC1B,kBAAC,EAAD,CAAeL,YAAaZ,KAAKoB,yB,GAvCvBX,IAAMC,YCFxBiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8f691fff.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date(),\n  }\n\n  componentDidMount() {\n    this.timeInterval = setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n      this.setState({ time: date });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeInterval);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <span>{time.toLocaleTimeString()}</span>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ handleClick }) => (\n  <button type=\"button\" onClick={handleClick}>\n    Toggle clock\n  </button>\n);\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ButtonSetName = ({ handleClick }) => (\n  <button type=\"button\" onClick={handleClick}>\n    Set name\n  </button>\n);\n\nButtonSetName.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport { Button } from './components/Button/Button';\nimport { ButtonSetName } from './components/ButtonSetName';\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isClockVisible: true,\n      name: 1,\n    };\n  }\n\n  changeVisibilityOnClick = () => {\n    this.setState(prevState => ({ isClockVisible: !prevState.isClockVisible }));\n  }\n\n  changeNameOnClick = () => {\n    const newName = Math.floor(Math.random() * 1000);\n\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${this.state.name} to ${newName}`);\n    this.setState({ name: newName });\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <div>\n          Current time:\n          {' '}\n          {isClockVisible\n            ? <Clock />\n            : <span>Empty</span>\n          }\n\n        </div>\n\n        <Button handleClick={this.changeVisibilityOnClick} />\n        <ButtonSetName handleClick={this.changeNameOnClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}